<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.mybatis.mapper.PostMapper">
		<select id="findPostVOByPostId" parameterType="int" resultMap="postVOResult">
			select 
				p.id as p_id, 
				p.name as p_name, 
				p.content as p_content,
				p.author_id as author_id
			from t_post p where p.id=${postId}
		</select>
		
		<resultMap type="PostVO" id="postVOResult">
			<id property="id" column="p_id"/>
			<result property="name" column="p_name" javaType="string" jdbcType="VARCHAR"/>
			<result property="content" column="p_content" javaType="string" jdbcType="VARCHAR"/>
			<!-- 方法1：使用resultMap实现联合 
			<association property="author" column="p_author_id" javaType="Author"> 
				<id property="id" column="a_id"/>
				<id property="name" column="a_name"/>
			</association>
			 -->
			 <!-- 方法2: 使用 select 实现联合, 推荐使用这种方法 --> 
			 <association property="author" column="author_id" select="com.mybatis.mapper.AuthorMapper.findAuthorById" />
		</resultMap>
		
		<select id="findPostlistByAuthorId" parameterType="int" resultMap="postResult">
			select 
				p.id as p_id, 
				p.name as p_name, 
				p.content as p_content 
			from t_post p where p.author_id = #{authorId}
		</select>
		<resultMap type="Post" id="postResult">
			<id property="id" column="p_id"/>
			<result property="name" column="p_name" javaType="string" jdbcType="VARCHAR"/>
			<result property="content" column="p_content" javaType="string" jdbcType="VARCHAR"/>
		</resultMap>
</mapper>