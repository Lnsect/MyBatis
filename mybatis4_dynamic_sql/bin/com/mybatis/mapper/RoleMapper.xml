<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.mybatis.mapper.RoleMapper">
	
	<!-- resultMap 提供了结果集映射规则 -->
	<resultMap type="role" id="roleMap"> 
		<id column="id" property="id" javaType="long" jdbcType="BIGINT" />
		<result column="role_name" property="roleName" javaType="string" jdbcType="VARCHAR" />
		<result column="note" property="note" typeHandler="com.mybatis.typeHandler.MyStringTypeHandler"/>
	</resultMap>
	
	<select id="findRoleByIF" parameterType="string" resultMap="roleMap">
		select id, role_name, note from t_role where 1=1
		<!-- 使用if元素构建动态SQL[ 2选1 ] -->
		<if test="roleName != null and roleName !=''">
			and role_name like concat('%', #{roleName}, '%')
		</if> 
	</select>
	
	<select id="findRoleByChoose" parameterType="string" resultMap="roleMap">
		select id, role_name, note from t_role where 1=1
		<!-- 使用 choose 元素构建动态SQL[ 3或多选1 ] -->
		<choose>
			<when test="roleId != null and roleId != ''">
				and id = #{roleId}
			</when>
			<when test="roleName != null and roleName != ''">
				and role_name like concat('%', #{roleName}, '%')
			</when>
			<otherwise>
				and note is not null
			</otherwise>
		</choose>
	</select>
	
	<select id="findRoleByWhere" parameterType="string" resultMap="roleMap">
		select id, role_name, note from t_role <!-- 采用 <where>元素 去掉 where 1=1 -->
		<!-- 使用 where 元素构建动态SQL-->
		<where>
			<if test="roleId != null and roleId != ''">
				and id = #{roleId}
			</if>
			<if test="roleName != null and roleName != ''">
				and role_name like concat('%', #{roleName}, '%')
			</if>
		</where>
	</select>
	
	<select id="findRoleByTrim" parameterType="string" resultMap="roleMap">
		select id, role_name, note from t_role <!-- 采用 <trim>元素 去掉 一些特殊字符串 -->
		<!-- 使用 Trim 元素构建动态SQL, prefix语句前缀,prefixOerrides是需要去掉的字符串. 
			 没有使用where元素, 但 mybatis 的trim元素 最后会构建where 子句.	-->
		<trim prefix="where" prefixOverrides="and">
			<if test="roleId != null and roleId != ''">
				and id = #{roleId}
			</if>
			<if test="roleName != null and roleName != ''">
				and role_name like concat('%', #{roleName}, '%')
			</if>
		</trim>
	</select>
	
	<update id="updateRoleById" parameterType="role">
		update t_role
		<set>
			<if test="roleName != null and roleName != ''">
				role_name = #{roleName}, <!-- 不要忘记这里的逗号',' -->
			</if>
			<if test="note != null and note != ''">
				note = #{note}
			</if>
		</set>
		where id = #{id}
	</update>
	
	<!-- bind元素通过OGNL 表达式去自定义一个上下文变量(也可以绑定多个参数) -->
	<select id="findRoleByBind" parameterType="string" resultMap="roleMap">
		<bind name="mypattern" value="'%'+ singleParameter + '%'" />
		select id, role_name, note from t_role where role_name like #{mypattern} 
	</select>
	
</mapper>